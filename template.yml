kind: Template
apiVersion: template.openshift.io/v1
parameters:
  - name: BRANCH
    required: true
  - name: APP
    required: true
    value: fin-biodiv-indicators
  - name: PAGE_TITLE
    required: true
    value: "Finnish Biodiversity Indicators"
  - name: APP_PORT
    required: true
    value: "8000"
  - name: HEALTH
    required: true
    value: /healthz
  - name: LIVENESS_PERIOD
    required: true
    value: "30"
  - name: FAILURE_THRESHOLD
    required: true
    value: "5"
  - name: READINESS_PERIOD
    required: true
    value: "5"
  - name: DB
    required: true
    value: postgres
  - name: DB_HEALTHCHECK
    required: true
    value: '[
      "sh",
      "-c",
      "PGPASSWORD=$POSTGRES_PASSWORD
        psql -h 0.0.0.0 -U postgres -d postgres -c \"SELECT 1\""
    ]'
  - name: DB_PORT
    required: true
    value: "5432"
  - name: DB_PATH
    required: true
    value: /var/lib/postgresql/data
  - name: DB_DATA
    required: true
    value: /pgdata
  - name: ACCESS_MODE
    required: true
    value: ReadWriteOnce
  - name: STORAGE_CLASS
    required: true
    value: "standard-csi"
  - name: STORAGE
    required: true
  - name: HOST
    required: true
  - name: DB_PASSWORD
    required: true
  - name: FINBIF_ACCESS_TOKEN
    required: true
  - name: FINBIF_API
    required: true
  - name: FINBIF_WAREHOUSE_QUERY
    required: true
  - name: FINBIF_EMAIL
    required: true
  - name: SMTP_SERVER
    required: true
  - name: SMTP_PORT
    required: true
  - name: ERROR_EMAIL_FROM
    required: true
  - name: OBJECT_STORE
    required: true
  - name: RCLONE_ACCESS_KEY_ID
    required: true
  - name: RCLONE_SECRET_ACCESS_KEY
    required: true
  - name: JOB_SECRET
    required: true
  - name: MEMORY
    required: true
  - name: SCHEDULE
    required: true
metadata:
  name: ${APP}
objects:
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${DB}-${BRANCH}
  spec:
    storageClassName: ${STORAGE_CLASS}
    accessModes:
    - ${ACCESS_MODE}
    resources:
      requests:
        storage: ${STORAGE}
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
  data:
    branch: ${BRANCH}
    db: ${DB}
    db_port: ${DB_PORT}
    db_host:  ${DB}-${BRANCH}
    finbif_user_agent: https://github.com/luomus/${APP}:${BRANCH}
    finbif_api: ${FINBIF_API}
    finbif_warehouse_query: ${FINBIF_WAREHOUSE_QUERY}
    finbif_email: ${FINBIF_EMAIL}
- kind: Secret
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
  type: Opaque
  data:
    db_password: ${DB_PASSWORD}
    finbif_access_token: ${FINBIF_ACCESS_TOKEN}
    rclone_access_key_id: ${RCLONE_ACCESS_KEY_ID}
    rclone_secret_access_key: ${RCLONE_SECRET_ACCESS_KEY}
    job_secret: ${JOB_SECRET}
- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: ${APP}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${APP}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP}
          branch: ${BRANCH}
          port: ${APP_PORT}
      spec:
        containers:
        - image: ghcr.io/luomus/${APP}:${BRANCH}
          imagePullPolicy: Always
          name: ${APP}-${BRANCH}
          ports:
          - containerPort: ${{APP_PORT}}
          volumeMounts:
          - mountPath: /home/user/tmp
            name: tmp
          startupProbe:
            httpGet:
              path: ${HEALTH}
              port: ${{APP_PORT}}
            failureThreshold: ${{FAILURE_THRESHOLD}}
            periodSeconds: ${{LIVENESS_PERIOD}}
          livenessProbe:
            httpGet:
              path: ${HEALTH}
              port: ${{APP_PORT}}
            failureThreshold: ${{FAILURE_THRESHOLD}}
            periodSeconds: ${{LIVENESS_PERIOD}}
          readinessProbe:
            httpGet:
              path: ${HEALTH}
              port: ${{APP_PORT}}
            periodSeconds: ${{READINESS_PERIOD}}
          env:
          - name: PAGE_TITLE
            value: ${PAGE_TITLE}
          - name: FINBIF_USER_AGENT
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: finbif_user_agent
          - name: PGUSER
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: db
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: ${APP}-${BRANCH}
                key: db_password
          - name: PGHOST
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: db_host
          - name: FINBIF_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: ${APP}-${BRANCH}
                key: finbif_access_token
          - name: FINBIF_API
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: finbif_api
          - name: FINBIF_WAREHOUSE_QUERY
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: finbif_warehouse_query
          - name: FINBIF_EMAIL
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: finbif_email
          - name: JOB_SECRET
            valueFrom:
              secretKeyRef:
                name: ${APP}-${BRANCH}
                key: job_secret
          - name: BRANCH
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: branch
          - name: SMTP_SERVER
            value: ${SMTP_SERVER}
          - name: SMTP_PORT
            value: ${SMTP_PORT}
          - name: ERROR_EMAIL_TO
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: finbif_email
          - name: ERROR_EMAIL_FROM
            value: ${ERROR_EMAIL_FROM}
          resources:
            limits:
              cpu: "500m"
              memory: "1Gi"
        volumes:
        - name: tmp
          emptyDir:
            medium: Memory
- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: ${DB}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${APP}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP}
          branch: ${BRANCH}
          port: ${DB_PORT}
      spec:
        containers:
        - image: ghcr.io/luomus/postgis-image:main
          imagePullPolicy: Always
          name: ${DB}-${BRANCH}
          volumeMounts:
          - mountPath: ${DB_PATH}
            name: ${DB}-${BRANCH}
          ports:
            - containerPort: ${{DB_PORT}}
          startupProbe:
            exec:
              command: ${{DB_HEALTHCHECK}}
            failureThreshold: ${{FAILURE_THRESHOLD}}
            periodSeconds: ${{LIVENESS_PERIOD}}
          livenessProbe:
            exec:
              command: ${{DB_HEALTHCHECK}}
            failureThreshold: ${{FAILURE_THRESHOLD}}
            periodSeconds: ${{LIVENESS_PERIOD}}
          readinessProbe:
            exec:
              command: ${{DB_HEALTHCHECK}}
            periodSeconds: ${{READINESS_PERIOD}}
          env:
          - name: PGDATA
            value: ${DB_PATH}${DB_DATA}
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: db
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: db_port
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: ${APP}-${BRANCH}
                key: db
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${APP}-${BRANCH}
                key: db_password
          resources:
            limits:
              cpu: "500m"
              memory: "1Gi"
        volumes:
        - name: ${DB}-${BRANCH}
          persistentVolumeClaim:
            claimName: ${DB}-${BRANCH}
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    ports:
    - name: ${APP_PORT}
      port: ${{APP_PORT}}
      targetPort: ${{APP_PORT}}
    selector:
      app: ${APP}
      branch: ${BRANCH}
      port: ${APP_PORT}
- kind: Service
  apiVersion: v1
  metadata:
    name: ${DB}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    ports:
    - name: ${DB_PORT}
      port: ${{DB_PORT}}
      targetPort: ${{DB_PORT}}
    selector:
      app: ${APP}
      branch: ${BRANCH}
      port: ${DB_PORT}
- kind: Route
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    host: ${HOST}
    port:
      targetPort: ${{APP_PORT}}
    tls:
      insecureEdgeTerminationPolicy: Redirect
    to:
      kind: Service
      name: ${APP}-${BRANCH}
- kind: CronJob
  apiVersion: batch/v1
  metadata:
    name: ${APP}-${BRANCH}
  spec:
    schedule: ${SCHEDULE}
    concurrencyPolicy: Forbid
    successfulJobsHistoryLimit: 10
    failedJobsHistoryLimit: 10
    jobTemplate:
      spec:
        activeDeadlineSeconds: 7200
        backoffLimit: 0
        template:
          metadata:
            labels:
              app: ${APP}
          spec:
            containers:
            - image: ghcr.io/luomus/${APP}:${BRANCH}
              imagePullPolicy: Always
              name: ${APP}-${BRANCH}
              command:
                - 'Rscript'
                - '--vanilla'
                - 'update_indices.R'
              env:
              - name: FINBIF_USER_AGENT
                valueFrom:
                  configMapKeyRef:
                    name: ${APP}-${BRANCH}
                    key: finbif_user_agent
              - name: FINBIF_ACCESS_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-${BRANCH}
                    key: finbif_access_token
              - name: FINBIF_API
                valueFrom:
                  configMapKeyRef:
                    name: ${APP}-${BRANCH}
                    key: finbif_api
              - name: FINBIF_WAREHOUSE_QUERY
                valueFrom:
                  configMapKeyRef:
                    name: ${APP}-${BRANCH}
                    key: finbif_warehouse_query
              - name: FINBIF_EMAIL
                valueFrom:
                  configMapKeyRef:
                    name: ${APP}-${BRANCH}
                    key: finbif_email
              - name: PGUSER
                valueFrom:
                  configMapKeyRef:
                    name: ${APP}-${BRANCH}
                    key: db
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-${BRANCH}
                    key: db_password
              - name: PGHOST
                valueFrom:
                  configMapKeyRef:
                    name: ${APP}-${BRANCH}
                    key: db_host
              - name: JOB_SECRET
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-${BRANCH}
                    key: job_secret
              - name: APP_HOSTNAME
                value: ${APP}-${BRANCH}
              - name: APP_PORT
                value: ${APP_PORT}
              - name: BRANCH
                valueFrom:
                  configMapKeyRef:
                    name: ${APP}-${BRANCH}
                    key: branch
              resources:
                limits:
                  cpu: "500m"
                  memory: ${MEMORY}
            restartPolicy: Never
